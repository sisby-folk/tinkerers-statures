//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.modrinth.minotaur:Minotaur:2.4.3'
        classpath "com.github.breadmoirai:github-release:2.4.1"
    }
}

plugins {
    id 'maven-publish'
    alias libs.plugins.loom
}

if (System.getenv("MODRINTH_TOKEN")) {
    apply plugin: "com.modrinth.minotaur"
}
if (System.getenv("GITHUB_TOKEN")) {
    apply plugin: "com.github.breadmoirai.github-release"
}

archivesBaseName = project.archives_base_name

def mc_major = '1.19'
def mc = mc_major + '.2'
def default_branch = '1.19'

def origVersion = project.version
project.version = project.version
group = project.maven_group

repositories {
    maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
    // // Base // //
    minecraft libs.mc
    mappings variantOf(libs.qm) { classifier "intermediary-v2" }
    modImplementation libs.ql
    modImplementation libs.qsl
    modImplementation libs.qfapi
}


processResources {
    final Map<String, String> map = [
            "version": version.toString(),
            "mc"     : libs.versions.mc.get(),
            "ql"     : libs.versions.ql.get(),
            "qsl"    : libs.versions.qsl.get(),
            "fapi"   : libs.versions.fapi.get(),
            "qfapi"  : libs.versions.qfapi.get()
    ]

    inputs.properties(map)
    filesMatching('*.mod.json') { expand(map) }
    filesMatching('mods.toml') { expand(map) }

    from("src/main/resources/mods.toml") {
        rename { "META-INF/mods.toml" }
    }
}


tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE.txt") {
        rename { "${it}_${archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}

if (System.getenv("MODRINTH_TOKEN")) {
    modrinth {
        token = System.getenv("MODRINTH_TOKEN")
        projectId = 'tinkerers-statures'
        versionNumber = project.version
        versionName = origVersion
        versionType = 'release'
        uploadFile = remapJar
        gameVersions = ['1.18.2', '1.19', '1.19.1', '1.19.2', '1.19.3', '1.19.4', '1.20', '1.20.1']
        loaders = ['quilt', 'fabric']
        detectLoaders = false
        dependencies {
            required.project "origins"
            required.project "pehkui"
        }
        changelog = "Changelog: https://github.com/sisby-folk/tinkerers-statures/releases/tag/v" + origVersion
        syncBodyFrom = rootProject.file("README.md").text
    }
}

if (System.getenv("GITHUB_TOKEN")) {
    githubRelease {
        token System.getenv("GITHUB_TOKEN")
        owner "sisby-folk"
        repo "tinkerers-statures"
        tagName 'v' + origVersion
        releaseName origVersion
        targetCommitish default_branch
        draft false
        prerelease false
        releaseAssets remapJar.archiveFile
        allowUploadToExisting true
        generateReleaseNotes true
    }
    tasks.githubRelease.dependsOn remapJar
}

if (System.getenv("MODRINTH_TOKEN") && System.getenv("GITHUB_TOKEN")) {
    tasks.register("fullRelease") {
        group "publishing"
        dependsOn "githubRelease"
        dependsOn "modrinth"
    }
}